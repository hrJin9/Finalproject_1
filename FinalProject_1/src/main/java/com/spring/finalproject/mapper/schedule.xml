<?xml version="1.0" encoding="UTF-8"?>

<!-- ==== mapper 기본설정 ==== -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- ==== 루트 엘리먼트 & 네임스페이스 설정(프로젝트 전체내에서 유일해야 한다.) ==== -->
<mapper namespace="schedule">

	<!-- 사내 캘린더에 캘린더 소분류 명 조회 -->
	<select id="existComCalendar" parameterType="String" resultType="int">
		select count(*)
		from tbl_calendar_small_category
		where fk_lgcatgono = 2 and smcatgoname = #{com_smcatgoname}  
	</select>


    <!-- 사내 캘린더에 캘린더 소분류 추가하기 --> 
	<insert id="addComCalendar" parameterType="HashMap">
		insert into tbl_calendar_small_category(smcatgono, fk_lgcatgono, smcatgoname, fk_employee_no)
		values(seq_smcatgono.nextval, 2, #{com_smcatgoname}, #{fk_employee_no})
	</insert>
	
	 
	<!-- 내 캘린더에 캘린더 소분류 명 조회 -->
	<select id="existMyCalendar" parameterType="HashMap" resultType="int">
		select count(*)
		from tbl_calendar_small_category
		where fk_lgcatgono = 1 and fk_employee_no = #{fk_employee_no} and smcatgoname = #{my_smcatgoname}  
	</select>
 

    <!-- 내 캘린더에 캘린더 소분류 추가하기 --> 
	<insert id="addMyCalendar" parameterType="HashMap">
		insert into tbl_calendar_small_category(smcatgono, fk_lgcatgono, smcatgoname, fk_employee_no)
		values(seq_smcatgono.nextval, 1, #{my_smcatgoname}, #{fk_employee_no})
	</insert>	
	
	
	<!-- 사내 캘린더에서 사내캘린더 소분류  보여주기 -->
	<select id="showCompanyCalendar" resultType="com.spring.schedule.model.Calendar_small_category_VO">
		select smcatgono, fk_lgcatgono, smcatgoname
		from tbl_calendar_small_category
		where fk_lgcatgono = 2
		order by smcatgono asc
	</select>
	 
	
	<!-- 내 캘린더에서 내캘린더 소분류  보여주기 -->
	<select id="showMyCalendar" resultType="com.spring.schedule.model.Calendar_small_category_VO"  parameterType="String">
		select smcatgono, fk_lgcatgono, smcatgoname
		from tbl_calendar_small_category
		where fk_lgcatgono = 1
		and fk_employee_no = #{fk_employee_no} 
		order by smcatgono asc
	</select>


    <!-- 일정 등록시 내캘린더,사내캘린더 선택에 따른 서브캘린더 종류를 알아오기 -->
    <select id="selectSmallCategory" parameterType="HashMap" resultType="com.spring.schedule.model.Calendar_small_category_VO">
    	select smcatgono, fk_lgcatgono, smcatgoname
		from tbl_calendar_small_category
		where fk_lgcatgono = #{fk_lgcatgono} and fk_employee_no= #{fk_employee_no}
		order by smcatgono asc
    </select>
    
    
    <!-- 공유자를 찾기 위한 특정글자가 들어간 회원명단 불러오기 -->  
    <select id="searchJoinUserList" parameterType="String" resultType="com.spring.hyerin.model.EmployeeVO"> 
    	select employee_no, name_kr, position, role
		from tbl_employee 
		where lower(name_kr) like '%'|| lower(#{joinUserName}) ||'%'
    </select>
    
     
    <!-- 일정 등록하기 -->
    <insert id="registerSchedule_end" parameterType="HashMap">
    	insert into tbl_calendar_schedule(calno, startdate, enddate, subject, place, joinuser, content, fk_smcatgono, fk_lgcatgono, fk_employee_no) 
    	values(seq_scheduleno.nextval, to_date(#{startdate}, 'yyyymmddhh24miss'), to_date(#{enddate}, 'yyyymmddhh24miss'), #{subject}, #{place}, #{joinuser}, #{content}, #{fk_smcatgono}, #{fk_lgcatgono}, #{fk_employee_no})  
    </insert>

 
    <!-- 등록된 일정에 대한 정보(달력에 표시됨)-->
	<select id="selectSchedule" resultType="com.spring.schedule.model.Calendar_schedule_VO" parameterType="String">
		select calno, startdate, enddate, subject, place, joinuser, content, fk_smcatgono, fk_lgcatgono, fk_employee_no 
		from tbl_calendar_schedule
		where fk_employee_no = #{fk_employee_no} OR 
		fk_lgcatgono = 2 OR
		(fk_lgcatgono != 2 AND lower(joinuser) like '%'|| lower(#{fk_employee_no}) ||'%') 
		order by calno asc
	</select>
	
	
	<!-- 일정 상세 보기 -->
	<resultMap type="HashMap" id="detailSchedule_Map">
		<result property="calno" 	column="calno" 	javaType="String" />
		<result property="STARTDATE" 	column="startdate" 		javaType="String" />
		<result property="ENDDATE" 		column="enddate" 		javaType="String" />
		<result property="SUBJECT" 		column="subject" 		javaType="String" />
		<result property="PLACE" 		column="place" 			javaType="String" />
		<result property="JOINUSER" 	column="joinuser" 		javaType="String" />
		<result property="CONTENT" 		column="content" 		javaType="String" />
		<result property="FK_SMCATGONO" column="fk_smcatgono" 	javaType="String" />
		<result property="FK_LGCATGONO" column="fk_lgcatgono" 	javaType="String" /> 
		<result property="fk_employee_no" 	column="fk_employee_no" 		javaType="String" />
		<result property="name_kr" 		column="name_kr" 			javaType="String" /> 
		<result property="SMCATGONAME" 	column="smcatgoname" 	javaType="String" />
	</resultMap>
	<select id="detailSchedule" parameterType="String" resultMap="detailSchedule_Map">
		select SD.calno
		     , to_char(SD.startdate,'yyyy-mm-dd hh24:mi') as startdate
		     , to_char(SD.enddate,'yyyy-mm-dd hh24:mi') as enddate  
		     , SD.subject
		     , nvl(SD.place,'*') as place
		     , nvl(SD.joinuser,'공유자가 없습니다.') as joinuser
		     , nvl(SD.content,'') as content
		     , SD.fk_smcatgono
		     , SD.fk_lgcatgono 
		     , SD.fk_employee_no
		     , M.name_kr
		     , SC.smcatgoname
		from tbl_calendar_schedule SD 
		JOIN tbl_employee M
		ON SD.fk_employee_no = M.EMPLOYEE_NO
		JOIN tbl_calendar_small_category SC
		ON SD.fk_smcatgono = SC.smcatgono
		where SD.calno = #{calno}
	</select>
	
	
	<!-- 일정삭제하기 -->
	<delete id="deleteSchedule" parameterType="String">
		delete from tbl_calendar_schedule 
		where calno = #{calno} 
	</delete>
	
	
	<!-- 일정수정하가 -->
	<update id="editSchedule_end" parameterType="com.spring.schedule.model.Calendar_schedule_VO">
		update tbl_calendar_schedule set startdate = to_date(#{startdate}, 'yyyymmddhh24miss')
		                               , enddate = to_date(#{enddate}, 'yyyymmddhh24miss')
		                               , subject = #{subject}
		                               , fk_lgcatgono = #{fk_lgcatgono}
		                               , fk_smcatgono = #{fk_smcatgono}
		                               , place = #{place}
		                               , joinuser = #{joinuser}
		                               , content = #{content}
		where calno = #{calno} 
	</update>
	
	
	<!-- (사내캘린더 또는 내캘린더)속의  소분류 카테고리인 서브캘린더 삭제하기   -->
	<delete id="deleteSubCalendar" parameterType="String">
		delete from tbl_calendar_small_category
		where smcatgono = #{smcatgono}
	</delete>
	
	
	<!-- 수정된 (사내캘린더 또는 내캘린더)속의 소분류 카테고리명이 이미 해당 사용자가 만든 소분류 카테고리명으로 존재하는지 유무 알아오기 -->
	<select id="existsCalendar" parameterType="HashMap" resultType="int">
	    select count(*)
		from tbl_calendar_small_category
		where fk_lgcatgono = #{caltype} 
		and fk_employee_no = #{EMPLOYEE_NO}  
		and smcatgoname = #{smcatgoname}
	</select>
	
	
	<!-- (사내캘린더 또는 내캘린더)속의 소분류 카테고리인 서브캘린더 수정하기    -->
	<update id="editCalendar" parameterType="HashMap">
		update tbl_calendar_small_category set smcatgoname = #{smcatgoname}
		where smcatgono = #{smcatgono}
	</update>
	
	
	
</mapper>



