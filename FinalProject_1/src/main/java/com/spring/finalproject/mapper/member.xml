<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="member">


	<select id="getLoginMember" resultType="com.spring.hyerin.model.EmployeeVO" parameterType="HashMap">
		select employee_no, fk_department_no, fk_team_no, name_kr, name_en, passwd, jointype, manager_no, hire_date, salary, commission_pct, mobile, postcode, address, detail_address, extra_address, email, gender, profile_systemfilename, profile_orginfilename, academic_ability, major, militaryservice, bank, accountnumber, role, position, authority,birthday
		from tbl_employee
		where status = 1 and employee_no = #{userid} 
	</select>
	
	<!-- 부서정보 가져오기 -->
	<select id="getdept" resultType="com.spring.hyerin.model.DepartmentsVO">
		select department_no, department_name
		from tbl_departments
	</select>
	
	<!-- 부서, 팀 알아오기 -->
	<resultMap type="HashMap" id="getdt_Map">
		<result property="department_no" column="department_no" javaType="String"/>
		<result property="department_name" column="department_name" javaType="String"/>
		<result property="team_no" column="team_no" javaType="String"/>
		<result property="team_name" column="team_name" javaType="String"/>
		<result property="total" column="total" javaType="String"/>
	</resultMap>
	<select id="getdt" resultMap="getdt_Map">
		select department_no, department_name, team_no, team_name, total
		from
		(
		    select T.fk_department_no, TC.team_no, TC.team_name, TC.total
		    from
		    (
		        select team_no, team_name, count(employee_no) as total
		        from tbl_team
		        left outer join tbl_employee
		        on fk_team_no = team_no
		        where delete_status = 1
		        group by (team_no, team_name)
		    ) TC
		    join tbl_team T
		    on TC.team_no = T.team_no
		) T
		join tbl_departments D
		on D.department_no = T.fk_department_no
		where delete_status = 1
	</select>
	
	
	<select id="getempvo" parameterType="String" resultType="com.spring.hyerin.model.EmployeeVO">
		select employee_no, fk_department_no, department_name, fk_team_no, team_name, name_kr, name_en, passwd, jointype, to_char(hire_date,'yyyy. mm. dd') as hire_date, salary, commission_pct, mobile, postcode, address, detail_address, extra_address, email, gender, profile_systemfilename, profile_orginfilename, academic_ability, major, militaryservice, bank, accountnumber, status, role, position, authority, to_char(birthday,'yyyy-mm-dd') as birthday, dayoff_cnt
		from v_employee
		where employee_no = #{empno}
	</select>
	
	
	<!-- 프로필사진 업로드해주기 -->
	<update id="addProfile" parameterType="HashMap">
		update tbl_employee set profile_systemfilename = #{profile_systemfilename}, profile_orginfilename = #{profile_orginfilename}, filesize = #{filesize}
		where employee_no = #{employee_no}
	</update>
	
	
	<!-- 프로필사진 이름 가져오기 -->
	<select id="getImg" parameterType="String" resultType="String">
		select profile_systemfilename
		from tbl_employee
		where employee_no = #{employee_no}
	</select>
	
	
	<!-- 해당 사원의 근무시간 알아오기 -->
	<select id="getWorkinghour" parameterType="string" resultType="String">
		select (endtime - starttime)*24*60
		from tbl_attendance 
		where fk_employee_no = #{employee_no} and to_char(starttime,'yyyy-mm-dd') = to_char(sysdate,'yyyy-mm-dd')
	</select>
	
	
	
	<!-- 부서목록 가져오기 -->
	<select id="getdeptname" resultType="com.spring.hyerin.model.DepartmentsVO">
		select department_no, department_name
		from tbl_departments 
	</select>
	
	<!-- 직위 가져오기 -->
	<select id="getposition" resultType="String">
		select position
		from tbl_employee
		where position is not null
		group by position
	</select>
	
	<!-- 고용형태 가져오기 -->
	<select id="getjointype" resultType="String">
		select employmenttype
		from tbl_employee
		group by employmenttype
	</select>
	
	
	<!-- 페이징 처리한 구성원 총 페이지수 알아오기 -->
	<select id="getEmpTotal" parameterType="HashMap" resultType="int">
		select count(*)
		from
		(
		    select row_number() over(order by employee_no desc) as rno, employee_no, fk_department_no, department_name, fk_team_no, team_name, name_kr, jointype, mobile, status, role, position, authority
		    from v_employee
		    where 1 = 1
		    <if test="dropCondition == 'authority' and dropVal == '0'">
		    	and authority != 1
		    </if>
		    <if test="dropCondition != '' and dropCondition != 'authority' and dropVal != ''">
			    and ${dropCondition} = #{dropVal}
		    </if>
		    <if test="searchCondition != '' and searchVal != ''">
			    and lower(${searchCondition}) like '%'||lower(#{searchVal})||'%'
		    </if>
		)
	</select>
	
	<!-- 페이징처리한 구성원 목록 가져오기 -->
	<select id="getEmpList" parameterType="HashMap" resultType="com.spring.hyerin.model.EmployeeVO">
		select employee_no, fk_department_no, department_name, fk_team_no, team_name, name_kr, jointype, email, mobile, status, role, position, authority, employmenttype
		from
		(
		    select row_number() over(order by employee_no desc) as rno, employee_no, fk_department_no, department_name, fk_team_no, team_name, name_kr, jointype, email, mobile, status, role, position, authority,employmenttype
		    from v_employee
		    where 1 = 1
		    <if test="dropCondition != '' and dropVal != ''">
			    and ${dropCondition} = #{dropVal}
		    </if>
		    <if test="searchCondition != '' and searchVal != ''">
			    and lower(${searchCondition}) like '%'||lower(#{searchVal})||'%'
		    </if>
		)
		where rno between #{startRno} and #{endRno}
	</select>
	
	
	<!-- 해당 부서의 팀 가져오기 -->
	<select id="getTeams" parameterType="String" resultType="com.spring.hyerin.model.TeamVO">
		select team_no, team_name
		from tbl_team
		where fk_department_no = #{deptno}
	</select>
	
	
</mapper>