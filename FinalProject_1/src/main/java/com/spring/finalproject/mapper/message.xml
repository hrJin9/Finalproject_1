<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="message">
	
	
	<!-- 받은 메시지목록 불러오기 -->
	<resultMap type="HashMap" id="getmvoList_Map">
		<result property="mno" column="mno" javaType="String"/>
		<result property="writer" column="writer" javaType="String"/>
		<result property="w_name" column="w_name" javaType="String"/>
		<result property="w_deptname" column="w_deptname" javaType="String"/>
		<result property="receiver" column="receiver" javaType="String"/>
		<result property="r_name" column="r_name" javaType="String"/>
		<result property="r_deptname" column="r_deptname" javaType="String"/>
		<result property="mgroup" column="mgroup" javaType="String"/>
		<result property="reno" column="reno" javaType="String"/>
		<result property="subject" column="subject" javaType="String"/>
		<result property="content" column="content" javaType="String"/>
		<result property="sendtime" column="sendtime" javaType="String"/>
		<result property="ms_checktime" column="ms_checktime" javaType="String"/>
		<result property="depthno" column="depthno" javaType="String"/>
		<result property="filecnt" column="filecnt" javaType="String"/>
		<result property="scrap_status" column="scrap_status" javaType="String"/>
	</resultMap>
	<select id="getmvoList" parameterType="HashMap" resultMap="getmvoList_Map">
		select rno, mno, writer, w_name, w_deptname, receiver, name_kr as r_name, department_name as r_deptname, mgroup, reno, subject, content, to_char(sendtime,'yy. mm. dd AM hh:mi') as sendtime, to_char(ms_checktime,'yy. mm. dd') as ms_checktime, TMM.delete_status, depthno, filecnt, scrap_status
		from
		(
		    select row_number() over(order by sendtime desc) as rno, mno, writer, name_kr as w_name, department_name as w_deptname, receiver, mgroup, reno, subject, content, sendtime, ms_checktime, TM.delete_status, depthno, TM.scrap_status, filecnt
		    from
		    (
		        select mno, writer, receiver, mgroup, reno, subject, content, sendtime, ms_checktime, depthno, MS.scrap_status, MS.delete_status, filecnt
		        from tbl_message M
		        join tbl_message_send MS
		        on M.mno = MS.fk_mno
		        left join
		        (select distinct fk_mno, count(*) as filecnt from tbl_message_file group by fk_mno) F
		        on mno = F.fk_mno
		        where receiver = #{empno} and MS.delete_status = 1 and sendtime <![CDATA[<=]]> sysdate
		        <if test="tab == 'unread'">
			        and ms_checktime is null
		        </if>
		        <if test="tab == 'scrap'">
					and MS.scrap_status = 1
		        </if>
				<if test="searchCondition != 'writer' and searchVal != ''">
		        	and lower(${searchCondition}) like '%'||lower(#{searchVal})||'%'
		        </if>
		    ) TM
		    left join v_employee E
		    on E.employee_no = writer
		    <if test="searchCondition == 'writer' and serachVal != ''">
		    	where lower(name_kr) like '%'||lower(#{searchVal})||'%'
		    </if>
		) TMM
		left join v_employee
		on employee_no = receiver
		where rno between #{startRno} and #{endRno}
		
	</select>
	
	<!-- 메시지리스트의 총페이지수 알아오기 -->
	<select id="getmgtotal" parameterType="HashMap" resultType="int">
		select ceil(count(*)/#{sizePerPage})
		from
		(
		    select row_number() over(order by sendtime desc) as rno, mno, writer, name_kr as w_name, department_name as w_deptname, receiver, mgroup, reno, subject, content, sendtime, ms_checktime, TM.delete_status, depthno, TM.scrap_status, filecnt
		    from
		    (
		        select mno, writer, receiver, mgroup, reno, subject, content, sendtime, ms_checktime, depthno, MS.scrap_status, MS.delete_status, filecnt
		        from tbl_message M
		        join tbl_message_send MS
		        on M.mno = MS.fk_mno
		        left join
		        (select distinct fk_mno, count(*) as filecnt from tbl_message_file group by fk_mno) F
		        on mno = F.fk_mno
		        where receiver = #{empno} and MS.delete_status = 1 and sendtime <![CDATA[<=]]> sysdate
		        <if test="tab == 'unread'">
			        and ms_checktime is null
		        </if>
		        <if test="tab == 'scrap'">
					and MS.scrap_status = 1
		        </if>
				<if test="searchCondition != 'writer' and searchVal != ''">
		        	and lower(${searchCondition}) like '%'||lower(#{searchVal})||'%'
		        </if>
		    ) TM
		    left join v_employee E
		    on E.employee_no = writer
		    <if test="searchCondition == 'writer' and serachVal != ''">
		    	where lower(name_kr) like '%'||lower(#{searchVal})||'%'
		    </if>
		) TMM
		left join v_employee
		on employee_no = receiver
	</select>
	
	
	
	<!-- 보낸 메시지목록 알아오기 -->
	<select id="getMsmvoList" parameterType="HashMap" resultType="com.spring.hyerin.model.MessageVO">
		select rno, writer, mno, mgroup, reno, subject, delete_status, to_char(sendtime,'yy. mm. dd AM hh:mi') as sendtime, depthno, scrap_status, receiver_name, filecnt
		from 
		(
		    select row_number() over(order by sendtime desc) as rno, writer, mno, mgroup, reno, subject, M.delete_status, sendtime, depthno, M.scrap_status, receiver_name, filecnt
		    from
		    (
		        select writer, mno, mgroup, reno, subject, M.delete_status, sendtime, depthno, M.scrap_status, 
		        LISTAGG(name_kr,',') WITHIN GROUP (ORDER BY name_kr) AS receiver_name, filecnt
		        from tbl_message M
		        left join tbl_message_send MS
		        on mno = fk_mno
		        left join v_employee
		        on receiver = employee_no
		        left join ( select fk_mno, count(*) as filecnt from tbl_message_file group by fk_mno ) F
				on F.fk_mno = mno
		        group by (writer, mno, mgroup, reno, subject, M.delete_status, sendtime, depthno, M.scrap_status, filecnt)
		    ) M
		    left join v_employee E
		    on E.employee_no = writer
		    where writer = #{empno} and M.delete_status = 1
		    <if test="tab == 'scrap'">
		    	and scrap_status = 1
		    </if>
		    <if test="searchCondition != 'receiver_name' and searchVal != ''">
		    	and lower(${searchCondition}) like '%'||lower(#{searchVal})||'%'
		    </if>
		    <if test="searchCondition == 'receiver_name' and serachVal != ''">
		    	and lower(receiver_name) like '%'||lower(#{searchVal})||'%'
		    </if>
		    order by sendtime desc
		)
		where rno between #{startRno} and #{endRno}
	</select>
	
	
	<!-- 보낸메시지 총개수 알아오기 -->
	<select id="getMsmgtotal" parameterType="HashMap" resultType="int">
		select ceil(count(*)/10)
		from 
		(
		    select row_number() over(order by sendtime desc) as rno, writer, mno, mgroup, reno, subject, M.delete_status, sendtime, depthno, M.scrap_status, receiver_name, filecnt
		    from
		    (
		        select writer, mno, mgroup, reno, subject, M.delete_status, sendtime, depthno, M.scrap_status, 
		        LISTAGG(name_kr,',') WITHIN GROUP (ORDER BY name_kr) AS receiver_name, filecnt
		        from tbl_message M
		        left join tbl_message_send MS
		        on mno = fk_mno
		        left join v_employee
		        on receiver = employee_no
		        left join ( select fk_mno, count(*) as filecnt from tbl_message_file group by fk_mno ) F
				on F.fk_mno = mno
		        group by (writer, mno, mgroup, reno, subject, M.delete_status, sendtime, depthno, M.scrap_status, filecnt)
		    ) M
		    left join v_employee E
		    on E.employee_no = writer
		    where writer = #{empno} and M.delete_status = 1
		    <if test="tab == 'scrap'">
		    	and scrap_status = 1
		    </if>
		    <if test="searchCondition != 'receiver_name' and searchVal != ''">
		    	and lower(${searchCondition}) like '%'||lower(#{searchVal})||'%'
		    </if>
		    <if test="searchCondition == 'receiver_name' and serachVal != ''">
		    	and lower(receiver_name) like '%'||lower(#{searchVal})||'%'
		    </if>
		    order by sendtime desc
		)
	</select>
	
	
	<!-- 로그인 유저가 클릭한 메시지내용 1개 불러오기 -->
	
	<!-- 메시지 내용 -->
	<select id="getmvo" parameterType="HashMap" resultType="com.spring.hyerin.model.MessageVO">
		<if test="receiver == ''">
			select mno, mgroup,reno, writer, w_name, w_dept, subject, content, sendtime, profile_orginfilename, depthno, scrap_status
			from (
			    select mno, mgroup,reno, writer, name_kr as w_name, department_name as w_dept, subject, content, to_char(sendtime, 'yyyy. mm. dd AM hh:mi') as sendtime, profile_orginfilename, depthno, scrap_status
			    from tbl_message join v_employee on employee_no = writer
			    where mno = #{mno}
			)
		</if>
		
		<if test="receiver != ''">
			select mno, mgroup,reno, writer, w_name, w_dept, subject, content, sendtime, profile_orginfilename, depthno, MS. scrap_status
			from (
			    select mno, mgroup,reno, writer, name_kr as w_name, department_name as w_dept, subject, content, to_char(sendtime, 'yyyy. mm. dd AM hh:mi') as sendtime, profile_orginfilename, depthno
			    from tbl_message join v_employee on employee_no = writer
			    where mno = #{mno}
			)
			join tbl_message_send MS
			on mno = fk_mno
			where receiver = #{receiver}
		</if>
	</select>
	
	<!-- 수신자정보 -->
	<select id="getmsvoList" parameterType="String" resultType="com.spring.hyerin.model.MessageSendVO">
		select fk_mno, receiver, name_kr as r_name, department_name as r_dept, profile_orginfilename
		from tbl_message_send join v_employee on receiver = employee_no
		where fk_mno = #{mno}
	</select>
	
	
	<!-- 보낸시간 가져오기 -->
	<select id="getmstime" parameterType="String" resultType="String">
		select distinct to_char(sendtime, 'yyyy. mm. dd AM hh:mi') as sendtime
		from tbl_message
		where mno = #{mno}
	</select>
	
	
	<!-- 메시지 파일 가져오기  -->
	<select id="getmfile" parameterType="String" resultType="com.spring.hyerin.model.MessageFileVO">
		select mfno, fk_mno, m_systemfilename, m_originfilename, file_size
		from tbl_message_file
		where fk_mno = #{fk_mno}
	</select>
	
	
	<!-- 부서정보 가져오기 -->
	<select id="getdept" resultType="com.spring.hyerin.model.DepartmentsVO">
		select department_no, department_name
		from tbl_departments
	</select>
	
	<!-- 부서, 팀 알아오기 -->
	<resultMap type="HashMap" id="getdt_Map">
		<result property="department_no" column="department_no" javaType="String"/>
		<result property="department_name" column="department_name" javaType="String"/>
		<result property="team_no" column="team_no" javaType="String"/>
		<result property="team_name" column="team_name" javaType="String"/>
		<result property="total" column="total" javaType="String"/>
	</resultMap>
	<select id="getdt" resultMap="getdt_Map">
		select department_no, department_name, team_no, team_name, total
		from
		(
		    select T.fk_department_no, TC.team_no, TC.team_name, TC.total
		    from
		    (
		        select team_no, team_name, count(employee_no) as total
		        from tbl_team
		        left outer join tbl_employee
		        on fk_team_no = team_no
		        where delete_status = 1
		        group by (team_no, team_name)
		    ) TC
		    join tbl_team T
		    on TC.team_no = T.team_no
		) T
		join tbl_departments D
		on D.department_no = T.fk_department_no
		where delete_status = 1
	</select>
	
	
	<!-- 구성원목록 알아오기 -->
	<select id="getEmpList" parameterType="HashMap" resultType="com.spring.hyerin.model.EmployeeVO">
		select nvl(fk_department_no,0) as fk_department_no, nvl(department_name,0) as department_name, nvl(fk_team_no,0) as fk_team_no, nvl(team_name,0) as team_name, employee_no, name_kr, role, position, profile_systemfilename
		from v_employee
		where status = 1
		<if test="searchVal != '' and teamVal == ''">
			and ${searchCondition} like '%'||#{searchVal}||'%'
		</if>
		<if test="searchVal != '' and teamVal != ''">
			and ${searchCondition} like '%'||#{searchVal}||'%' and fk_team_no = #{teamVal}
		</if>
		<if test="searchVal == '' and teamVal != ''">
			and fk_team_no = #{teamVal}
		</if>
	</select>
	
	
	<!-- mno 채번해오기 -->
	<select id="getmno" resultType="String">
		select 'm-'||seq_tbl_message.nextval
		from dual
	</select>
	
	<!-- tbl_message에 메시지 하나 insert하기 -->
	<insert id="addMessage" parameterType="com.spring.hyerin.model.MessageVO">
		insert into tbl_message (mno, writer, mgroup, reno, subject, content, sendtime, delete_status, depthno)
		<if test="mgroup != '' and sendtime != ''">
			values(#{mno}, #{writer}, #{mgroup}, #{reno}, #{subject}, #{content}, to_date(#{sendtime},'yyyy/mm/dd hh24:mi'), default, #{depthno})
		</if>
		<if test="mgroup != '' and sendtime == ''">
			values(#{mno}, #{writer}, #{mgroup}, #{reno}, #{subject}, #{content}, sysdate, default, #{depthno})
		</if>
		<if test="mgroup == '' and sendtime != ''">
			values(#{mno}, #{writer}, #{mno}, null, #{subject}, #{content}, to_date(#{sendtime},'yyyy/mm/dd hh24:mi'), default, default)
		</if>
		<if test="mgroup == '' and sendtime == ''">
			values(#{mno}, #{writer}, #{mno}, null, #{subject}, #{content}, sysdate, default, default)
		</if>
	</insert>
	
	
	<!-- tbl_message_file에 파일을 insert하기 -->
	<insert id="addMF" parameterType="com.spring.hyerin.model.MessageFileVO">
		insert into tbl_message_file (mfno, fk_mno, m_systemfilename, m_originfilename, file_size)
		values('mf-'||seq_tbl_message_file.nextval, #{fk_mno}, #{m_systemfilename}, #{m_originfilename}, #{file_size})
	</insert>
	
	<!-- tbl_message_send에 수신자 insert하기 -->
	<insert id="addMS" parameterType="com.spring.hyerin.model.MessageSendVO">
		insert into tbl_message_send (msno, fk_mno, receiver, ms_checktime, scrap_status)
		values('ms-'||seq_tbl_message_send.nextval, #{fk_mno}, #{receiver}, null, default)
	</insert>
	
	
	<!-- 주고받은 메시지(관련메시지) 최근 3개 알아오기 -->
	<resultMap type="HashMap" id="getmgroupList_Map">
		<result property="n_mno" column="n_mno" javaType="String"/>
		<result property="n_writer" column="n_writer" javaType="String"/>
		<result property="n_subject" column="n_subject" javaType="String"/>
		<result property="n_sendtime" column="n_sendtime" javaType="String"/>
		<result property="mno" column="mno" javaType="String"/>
		<result property="writer" column="writer" javaType="String"/>
		<result property="subject" column="subject" javaType="String"/>
		<result property="sendtime" column="sendtime" javaType="String"/>
		<result property="b_mno" column="b_mno" javaType="String"/>
		<result property="b_writer" column="b_writer" javaType="String"/>
		<result property="b_subject" column="b_subject" javaType="String"/>
		<result property="b_sendtime" column="b_sendtime" javaType="String"/>
	</resultMap>
	
	<select id="getmgroupList" parameterType="HashMap" resultMap="getmgroupList_Map">
		select n_mno, n_writer, n_subject, to_char(n_sendtime, 'yyyy. mm. dd AM hh:mi') as n_sendtime, mno, writer, subject, to_char(sendtime, 'yyyy. mm. dd AM hh:mi') as sendtime, b_mno, name_kr||'·'||department_name as b_writer, b_subject, to_char(b_sendtime, 'yyyy. mm. dd AM hh:mi') as b_sendtime
		from
		(
		    select n_mno, n_writer, n_subject, n_sendtime, MF.mno, MF.writer, MF.subject, MF.sendtime, b_mno, B.writer as b_writer, B.subject as b_subject, B.sendtime as b_sendtime
		    from
		    (
		        select n_mno, name_kr||'·'||department_name as n_writer, n_subject,n_sendtime, mno, writer, subject, sendtime,b_mno
		        from
		        (
		        select n_mno, N.writer as n_writer, N.subject as n_subject, N.sendtime as n_sendtime, M.mno, M.writer, M.sendtime, M.subject, M.b_mno
		        from
		        (
		           select LAG(mno) OVER (ORDER BY to_number(substr(mno,3))) as n_mno, 
		                  mno, subject, name_kr||'·'||department_name as writer, sendtime,
		                  LEAD(mno) OVER (ORDER BY to_number(substr(mno,3))) as b_mno
		           from tbl_message
		           left join (select fk_mno, receiver from tbl_message_send where receiver = #{receiver} and delete_status = 1 group by (fk_mno, receiver))on mno = fk_mno
		           join v_employee on writer = employee_no
		           where mgroup = (select mgroup from tbl_message where mno = #{mno})
		        ) M
		        left join tbl_message N
		        on N.mno = M.n_mno
		        ) 
		        left join v_employee on employee_no = n_writer
		    ) MF
		    left join tbl_message B
		    on MF.b_mno = B.mno
		)
		left join v_employee on employee_no = b_writer
		where mno = #{mno}
	</select>
	
	<!-- 메시지 읽음처리하기 -->
	<update id="changeMgStatus" parameterType="com.spring.hyerin.model.MessageSendVO">
		update tbl_message_send set ms_checktime = sysdate
		where fk_mno = #{fk_mno} and receiver = #{receiver}
	</update>
	
	
	<!-- 받은 메시지 개수 알아오기 -->
	<select id="getMgCnt" parameterType="HashMap" resultType="int">
		select count(*) from tbl_message_send
		where receiver = #{receiver} and delete_status = 1
		<if test="tab == 'unread'">
			and ms_checktime is null
		</if>
		<if test="tab == 'scrap'">
			and scrap_status = 1
		</if>
	</select>
	
	
	<!-- 보낸 메시지 개수 알아오기 -->
	<select id="getMsMgCnt" parameterType="HashMap" resultType="int">
		select count(*) from tbl_message
		where writer = #{writer} and delete_status = 1
		<if test="tab == 'scrap'">
			and scrap_status = 1
		</if>
	</select>
	
	
	<!-- 메시지 체크된것 읽음처리하기 -->
	<update id="chxStatus" parameterType="HashMap">
		update tbl_message_send set 
		<if test="condition == 'read'">
			ms_checktime = sysdate
		</if>
		<if test="condition == 'unread'">
			ms_checktime = null
		</if>
		<if test="condition == 'unscrap'">
			scrap_status = 0
		</if>
		<if test="condition == 'scrap'">
			scrap_status = 1
		</if>
		<if test="condition == 'delete'">
			delete_status = 0
		</if>
		where fk_mno = #{mno} and receiver = #{receiver}
	</update>
	
	<update id="sendchxStatus" parameterType="HashMap">
		update tbl_message set 
		<if test="condition == 'unscrap'">
			scrap_status = 0
		</if>
		<if test="condition == 'scrap'">
			scrap_status = 1
		</if>
		<if test="condition == 'delete'">
			delete_status = 0
		</if>
		where mno = #{mno}
	</update>
	
	
	
	<!-- 메시지파일 정보 알아오기 -->
	<select id="getmfvo" parameterType="com.spring.hyerin.model.MessageFileVO" resultType="com.spring.hyerin.model.MessageFileVO">
		select mfno, fk_mno, m_systemfilename, m_originfilename, file_size
		from tbl_message_file
		where mfno = #{mfno}
	</select>
	
</mapper>